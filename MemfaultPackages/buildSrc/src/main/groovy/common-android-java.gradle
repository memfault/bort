// Standardizes all our android gradle plugin options that apply for every
// Android module. This plugin is for java-only modules that cannot have
// a Kotlin dependency (because AOSP builds use an old Kotlin version).
//
// Requires that either the 'com.android.application' or 'com.android.library'
// plugins have been applied before applying this buildscript plugin on top.
//
// In the future we can split into 'common-android-library' and
// 'common-android-app', etc., to better specify specific configurations.

import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id 'checkstyle'
}

android {
    compileSdkVersion versions.compileSdk

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
    }

    lint {
        abortOnError true
        // This check is crashing in CI.
        disable "NullSafeMutableLiveData"
    }

    testOptions {
        // Needed to unit test against AIDL-generated code
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                exceptionFormat TestExceptionFormat.FULL
                showCauses true
                showExceptions true
                showStackTraces true
                showStandardStreams true
            }
        }
    }
}

dependencies {
    testImplementation deps.test.coroutines
    testImplementation deps.test.junit
    testImplementation deps.test.mockk
}

checkstyle {
    toolVersion '10.12.3'
}


tasks.register('checkstyle', Checkstyle.class) {
    ignoreFailures = false
    maxWarnings = 0
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    classpath = files()
}

tasks.named('check').configure {
    dependsOn('checkstyle')
}
