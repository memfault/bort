apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'
apply from: "../properties.gradle"

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        manifestPlaceholders = [
                bortControlPermission: bortProperty("BORT_CONTROL_PERMISSION"),
        ]

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode loadVersionCode() as Integer
        versionName loadVersionName() as String

        buildConfigField "String", "MEMFAULT_PROJECT_API_KEY", "\"" + bortProperty("MEMFAULT_PROJECT_API_KEY") + "\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
        // Used for CI. Do not use for production.
        releaseTest {
            initWith release
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-Xopt-in=kotlin.time.ExperimentalTime"
        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation project(':bort-shared')
    compileOnly files('libs/update_engine.jar')
    implementation deps.kotlin.stdlib
    implementation deps.kotlin.coroutines
    implementation deps.result
    implementation deps.serialization.json
    implementation deps.serialization.converter

    implementation deps.android.appcompat
    implementation deps.android.work
    implementation deps.memfault.cloud

    testImplementation deps.test.junitApi
    testImplementation deps.test.junitJupiterEngine
    testImplementation deps.test.coroutines
    testImplementation deps.test.mockk
}
