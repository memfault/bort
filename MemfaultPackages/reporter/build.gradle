apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "../properties.gradle"

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "com.memfault.usagereporter"
        manifestPlaceholders = [
                // For development purposes (allows UsageReporter to be updated using `adb install`):
                bortUsageReporterPersistent: bortProperty("BORT_USAGE_REPORTER_PERSISTENT") ?: "true",
        ]

        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode loadVersionCode() as Integer
        versionName loadVersionName() as String

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
        }

        // Used for CI. Do not use for production.
        releaseTest {
            initWith release
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name.endsWith('debug')) {
            variant.setIgnore(true);
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-Xopt-in=kotlin.time.ExperimentalTime"
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation project(':bort-shared')
    implementation project(':reporting-lib')

    implementation deps.kotlin.coroutines
    implementation deps.kotlin.stdlib
    implementation deps.android.preference
    implementation deps.result

    testImplementation deps.test.junitApi
    testImplementation deps.test.junitJupiterEngine
    testImplementation deps.test.coroutines
    testImplementation deps.test.mockk
}

task copyReleaseApk(type: Copy) {
    from file("$buildDir/outputs/apk/release/reporter-release-unsigned.apk")
    into rootDir
    rename 'reporter-release-unsigned.apk', 'MemfaultUsageReporter.apk'
}

afterEvaluate {
    assembleRelease.finalizedBy copyReleaseApk
}
